name: ci

on:
  push:
    branches: [ main ]

env:
  SLACK_INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}
  TF_VAR_email: ${{ secrets.EMAIL }}
  TF_VAR_log_bucket: ${{ secrets.LOG_BUCKET }}
  TF_VAR_cloudtrail_log_bucket: ${{ secrets.CLOUDTRAIL_LOG_BUCKET }}
  TF_VAR_config_log_bucket: ${{ secrets.CONFIG_LOG_BUCKET }}
  TF_VAR_tfstate_bucket: ${{ secrets.TFSTATE_BUCKET }}
  TF_VAR_slack_workspace_id: ${{ secrets.SLACK_WORKSPACE_ID }}
  TF_VAR_slack_channel_id: ${{ secrets.SLACK_CHANNEL_ID }}

jobs:
  plan:
    name: plan
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESSKEY }}
          aws-secret-access-key: ${{ secrets.SECRETACCESSKEY }}
          aws-region: ap-northeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Format
        run: terraform fmt -recursive -check -diff

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -no-color

  apply:
    name: apply
    runs-on: ubuntu-latest
    needs: plan

    defaults:
      run:
        shell: bash

    environment:
      name: approval

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESSKEY }}
          aws-secret-access-key: ${{ secrets.SECRETACCESSKEY }}
          aws-region: ap-northeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
